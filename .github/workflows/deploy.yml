name: Deploy NPM packages and Lambda layer
on:
  release:
    types: [created]

jobs:
  npm_deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: lib
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
      - run: pnpm install
      - run: pnpm run ci-build
      - run: docker-compose -f ./docker/docker-compose.yml up -d
      - run: sleep 10
      - run: pnpm test:int
      - run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - run: npm pkg set 'version'="${RELEASE_VERSION}"
      - run: pnpm publish -r --access public --no-git-checks --tag prerelease
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Upload layer source artifact
        uses: actions/upload-artifact@v3
        with:
          name: layer-handler
          path: lib/layer
          retention-days: 1
  terraform_deploy:
    needs: [npm_deploy]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: layer
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: layer-handler
          path: lib/layer
      - run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: terraform apply -auto-approve -var is_beta=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
